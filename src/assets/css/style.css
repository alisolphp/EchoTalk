:root {
    --bg-color: #212529; /* Default dark theme background */
    --text-color: #dee2e6;
    --highlight-color: #fdd835; /* Yellow highlight color */
    --current-color: #fb8c00;
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
}

#sampleSentence span {
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}

#sampleSentence span:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.current-word {
    background-color: var(--current-color);
    padding: 0 .25rem;
    border-radius: 5px;
    color: #000;
}

.correct {
    color: #198754; /* Bootstrap success green */
}

.incorrect {
    color: #dc3545; /* Bootstrap danger red */
}

.recording-indicator {
    color: #0dcaf0; /* Bootstrap info cyan */
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.listening-indicator {
    color: #8adeff; /* A calm, light blue for listening state */
    font-style: italic;
    opacity: 0.9;
}

/* An improved animation for the recording dot.
  This version adds a subtle scaling effect and a glow,
  making it look more like a real pulsing light.
  You can replace your existing .dot and @keyframes pulse with this.
*/
.recording-indicator .dot {
    display: inline-block;
    width: 10px;
    height: 10px;
    background-color: #dc3545; /* Bootstrap danger red */
    border-radius: 50%;
    box-shadow: 0 0 5px #dc3545, 0 0 10px #dc3545; /* Added glow effect */
    animation: pulse-revised 1.5s infinite;
}

@keyframes pulse-revised {
    0% {
        transform: scale(0.9);
        opacity: 0.7;
    }
    50% {
        transform: scale(1.1);
        opacity: 1;
    }
    100% {
        transform: scale(0.9);
        opacity: 0.7;
    }
}

/* --- START: New section for karaoke-style highlighting --- */

#sentence-container {
    line-height: 1.5;
}
#sentence-container .word {
    cursor: pointer;
}

/* Default word styling */
#sentence-container .word {
    /* Default color matches main text color */
    color: var(--text-color);
    /* Smooth transition for color changes */
    transition: color 0.2s ease-in-out;
}

/* Class added to highlight the currently playing word */
#sentence-container .word.highlighted {
    color: var(--highlight-color); /* Yellow highlight color */
}

/* --- END: End of karaoke-style section --- */


.recording-text-indicator {
    color: #0dcaf0; /* Bootstrap info cyan */
    text-align: center;
    padding-top: 10px;
}

/* --- START: Changes for .visualizer-container --- */
.visualizer-container {
    /* position: relative; */ /* Original line removed or commented out */
    position: fixed;      /* NEW: Fix position to viewport */
    bottom: 0;            /* NEW: Align to the bottom edge */
    left: 0;              /* NEW: Align to the left edge */
    width: 100%;
    display: flex;
    justify-content: center;
    /* align-items: center; */ /* Original line changed below */
    align-items: flex-end;    /* CHANGED: Align content to bottom for upward expansion */
    margin-bottom: 0;         /* CHANGED: No margin needed for fixed element */
    pointer-events: none;     /* NEW: Prevent container from blocking clicks on elements behind it */
    z-index: 1000;            /* NEW: Ensure it renders on top of other content */
}
/* --- END: Changes for .visualizer-container --- */


/**
 * Visualizer Idle State (#soundWaveVisualizer)
 * Defines the base appearance and the transition for fading out.
 */
#soundWaveVisualizer {
    width: 100%;
    height: 0vh; /* Base height when idle or returning to idle */
    filter: blur(3em);
    opacity: 0.7;
    object-fit: cover; /* Ensures image covers the area, even if clipped */

    mask-image: linear-gradient(to top, black 40%, transparent 100%);
    -webkit-mask-image: linear-gradient(to top, black 40%, transparent 100%); /* Vendor prefix for compatibility */

    /**
     * Asymmetric Transition: Slow Return to Idle (Fade Out / Shrink Animation)
     * This transition applies when the '.active' class is removed.
     * The longer durations create a smooth, gradual disappearance effect.
     */
    transition: height 1.5s ease-in-out,
    filter 2.0s ease-in-out,
    opacity 2.0s ease-in-out;
}

/**
 * Visualizer Active State (#soundWaveVisualizer.active)
 * Defines the appearance when sound is detected and overrides the transition for fading in.
 */
#soundWaveVisualizer.active {
    filter: blur(3em);
    opacity: 1;
    /* Note: The 'height' property during activation is set dynamically via JavaScript. */

    /**
     * Asymmetric Transition: Fast Activation (Fade In / Grow Animation)
     * This transition overrides the base settings when the '.active' class is added.
     * The shorter durations provide immediate feedback when sound starts.
     */
    transition: height 0.5s ease-out,
    filter 0.7s ease-out,
    opacity 0.7s ease-out;
}